import { useEffect, useState } from 'react';
import Image from 'next/image';

const Game = () => {
  const mapWidth = 4240;
  const mapHeight = 2660;
  const scale = 0.4;

  const [position, setPosition] = useState({ x: 2400, y: 880 });
  const [sprite, setSprite] = useState('A.png');
  const [direction, setDirection] = useState('A');
  const [mapPosition, setMapPosition] = useState({ x: 0, y: 0 });
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      setMapPosition({
        x: -2800 * scale + window.innerWidth / 2,
        y: -1300 * scale + window.innerHeight / 2,
      });
      setIsMounted(true);
    }
  }, []);

  const handleKeyDown = (e) => {
    let newPos = { ...position };
    let newMapPos = { ...mapPosition };
    switch (e.key) {
      case 'w':
      case 'W':
        newPos.y -= 20;
        setSprite('W.gif');
        setDirection('W');
        newMapPos.y += 20 * scale;
        break;
      case 'a':
      case 'A':
        newPos.x -= 20;
        setSprite('A.gif');
        setDirection('A');
        break;
      case 's':
      case 'S':
        newPos.y += 20;
        setSprite('S.gif');
        setDirection('S');
        newMapPos.y -= 20 * scale;
        break;
      case 'd':
      case 'D':
        newPos.x += 20;
        setSprite('D.gif');
        setDirection('D');
        break;
      default:
        break;
    }
    setPosition(newPos);
    setMapPosition({
      ...newMapPos,
      x: mapPosition.x, // Keep the horizontal position fixed
    });
  };

  const handleKeyUp = () => {
    setSprite(`${direction}.png`);
  };

  useEffect(() => {
    if (isMounted) {
      window.addEventListener('keydown', handleKeyDown);
      window.addEventListener('keyup', handleKeyUp);

      return () => {
        window.removeEventListener('keydown', handleKeyDown);
        window.removeEventListener('keyup', handleKeyUp);
      };
    }
  }, [direction, position, isMounted]);

  return (
    <div
      style={{
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        height: '100vh',
        width: '100vw',
        overflow: 'hidden',
        position: 'relative',
      }}
    >
      <div
        style={{
          width: '80%',
          height: '80%',
          position: 'relative',
          overflow: 'hidden',
          border: '2px solid black',
          backgroundImage: 'url(/assets/sea.png)',
          backgroundSize: 'cover',
        }}
      >
        <div
          style={{
            position: 'absolute',
            width: `${mapWidth}px`,
            height: `${mapHeight}px`,
            left: `${mapPosition.x}px`,
            top: `${mapPosition.y}px`,
            transition: 'top 0.1s, left 0.1s',
            transform: `scale(${scale})`,
            transformOrigin: 'top left',
          }}
        >
          <Image src="/assets/map.png" alt="Map" layout="fill" objectFit="cover" />
          <div
            style={{
              position: 'absolute',
              left: `${position.x}px`,
              top: `${position.y}px`,
              width: '128px',
              height: '128px',
            }}
          >
            <Image src={`/assets/${sprite}`} alt="Character" width={128} height={128} />
          </div>
        </div>
      </div>
      <style jsx>{`
        .gameContainer {
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100vh;
          width: 100vw;
          overflow: hidden;
          position: relative;
        }

        .mapContainer {
          position: absolute;
          width: ${mapWidth}px;
          height: ${mapHeight}px;
        }
      `}</style>
    </div>
  );
};

export default Game;
